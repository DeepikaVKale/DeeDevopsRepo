pipeline{
    parameters{
        choice(name: 'terraformAction',choices: ['apply', 'destroy'],description: 'choose your terraform action to perform')
    }
    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent any
    
    stages{
        stage('checkout'){
            steps{
                script {
                    dir("terraform"){
                        git branch: 'terraform-new',url:'https://github.com/DeepikaVKale/DeeDevopsRepo.git'
                    }
                }
            }
        }
        stage('Plan') {
            steps {
                sh '''
                    cd "Project 1"
                    terraform init
                    terraform plan -out=tfplan
                    terraform show -no-color tfplan >> tfplan.txt
                '''
            }
        }

        stage('approval'){
            steps{
                script {
                    def plan = readFile ('Project 1/tfplan.txt')
                    input message: "Do you want to proceed with terraform action..?"
                    parameters: [text(name:'plan', description: 'Can you review yor code one more time',defaultValue: plan)]
                }
            }
        }
        stage('Apply or Destroy'){
            when{
                expression{
                    return params.terraformAction == 'apply'  || params.terraformAction == 'destroy'
                }
            }
            steps{
                script{
                    if (params.terraformAction == 'apply'){
                        sh '''
                            cd "Project 1"
                            terraform apply -input=false tfplan
                        '''
                    } else if (params.terraformAction == 'destroy'){
                        sh '''
                            cd "Project 1"
                            terraform destroy -auto-approve
                        '''
                    }
                }
            }  
        }
    }  
}